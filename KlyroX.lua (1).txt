--[[ This code was obfuscated by Junkie-Development ]]--
local Z=.8 local L=3 local j=tostring(math.floor(os.clock()*1000))local o=3 local O=5 local P=300 local a=type local F=tostring local I=pcall local H=error local B=coroutine.create local x=coroutine.resume local C=coroutine.yield local d=os.clock local i=table.concat local l=string.byte local q=string.char local p=string.len local b=rawset local X=getmetatable local z=setmetatable local k=math.random local u=math.floor local S=math.min local function s(Z,L)local j,o=0,1 while Z>0 or L>0 do local O=Z%2 local P=L%2 if O~=P then j=j+o end Z,L,o=math.floor(Z/2),math.floor(L/2),o*2 end return j end local function h(Z,L)if not Z or Z==""then return""end local j,o={},#L for O=1,#Z,1 do j[O]=q(s(l(Z,O),l(L,(O-1)%o+1)))end return i(j)end local function w(Z)local L=2166136261 for j=1,#Z,1 do L=s(L,l(Z,j))L=(L*16777619)%4294967296 end return tostring(L)end local function A(Z)if a(Z)~="\102\117\110\099\116\105\111\110"then return F(Z)end local L,j=I(function()return string.dump(Z)end)if L and a(j)=="\115\116\114\105\110\103"then return j end return F(Z)end local function K(Z)return w(A(Z))end local function N(Z)local L=X(Z)or{}if L.__newindex then return end L.__newindex=function(Z,L,j)if L=="\074\117\110\107\105\101\075\101\121\083\121\115\116\101\109"or L=="\074\117\110\107\105\101\080\114\111\116\101\099\116\101\100"or L=="\074\117\110\107\105\101\075\101\121\083\121\115\116\101\109\085\073"then H("\080\114\111\116\101\099\116\101\100 \103\108\111\098\097\108\058 "..F(L))else b(Z,L,j)end end z(Z,L)end local function c(Z,...)local L=d()local j,o,O,P=I(Z,...)local a=d()return j,{o,O,P},a-L end local function V()local Z=0 for L=1,3,1 do local j,o,O=c(function()local Z=0 for L=1,2000,1 do Z=Z+L end return Z end)Z=Z+O end return Z/3 end local T={}local f="\104\116\116\112\115\058\047\047\097\112\105\046\106\117\110\107\105\101-\100\101\118\101\108\111\112\109\101\110\116\046\100\101\047\097\112\105\047\118\049"local J=game:GetService("\072\116\116\112\083\101\114\118\105\099\101")local n=game:GetService("\080\108\097\121\101\114\115")local function g()local Z=tostring(loadstring)if not string.find(Z,"\102\117\110\099\116\105\111\110\058")then end local L="\114\101\116\117\114\110 \'\116\101\115\116\'"local j=loadstring(L)if not j or j()~="\116\101\115\116"then end return true end local M=g()local U=loadstring local y=game.HttpGet local m=J local r=request local R=http_request local E=getgenv local v=getrenv local Y=(tostring(loadstring)):gsub("\037\115\043","")local W=(tostring(J)):gsub("\037\115\043","")if not(getgenv()).JUNKIE_SDK_SESSIONS then(getgenv()).JUNKIE_SDK_SESSIONS={}end local D=tostring(math.random(100000,999999))local t=3 local function Q(Z)local L=5381 for j=1,#Z,1 do L=(L*33+string.byte(Z,j))%2147483647 end return L end local G="\074\085\078\075\073\069\095\083\068\075\095\086\050\095\083\069\067\085\082\069"local function e()local Z=(getgenv()).JUNKIE_SDK_SESSIONS Z[D]=tick()local L=tick()for j,o in pairs(Z)do if L-o>60 then Z[j]=nil end end local j=0 for Z in pairs(Z)do j=j+1 end if j>t then end if loadstring~=U then end if request and request~=r then end if http_request and http_request~=R then end if getgenv and getgenv~=E then end return true end local function Z0()local Z=getfenv()if not Z or type(Z)~="\116\097\098\108\101"then end local L=(tostring(loadstring)):gsub("\037\115\043","")if L~=Y then end local j=(tostring(J)):gsub("\037\115\043","")if j~=W then end if debug and debug.traceback then local Z=debug.traceback()if Z and(string.find(Z,"\104\111\111\107")or string.find(Z,"\114\101\112\108\097\099\101"))then end end local o=loadstring("\114\101\116\117\114\110 \052\050")if not o or o()~=42 then end local O=loadstring("\114\101\116\117\114\110 \057\057")local P=loadstring("\114\101\116\117\114\110 \057\057")if not O or not P or O()~=P()then end return true end local L0=e()function generateHWID()local Z=(game:GetService("\082\098\120\065\110\097\108\121\116\105\099\115\083\101\114\118\105\099\101")):GetClientId()return Z end local j0=is_syn_closure or is_fluxus_closure or is_sentinel_closure or is_krnl_closure or is_proto_closure or is_calamari_closure or is_electron_closure or is_elysian_closure local function o0()if is_syn_closure or syn and syn.request then return"\083\121\110\097\112\115\101"elseif getgenv and(getgenv()).getexecutorname then return(getgenv()).getexecutorname()elseif getgenv and(getgenv()).identifyexecutor then return(getgenv()).identifyexecutor()elseif is_fluxus_closure or fluxus and fluxus.request then return"\070\108\117\120\117\115"elseif is_sentinel_closure or getgenv and(getgenv()).sentinel then return"\083\101\110\116\105\110\101\108"elseif is_krnl_closure or getgenv and(getgenv()).krnl_loaded then return"\075\082\078\076"elseif is_proto_closure or PROTOSMASHER_LOADED then return"\080\114\111\116\111\083\109\097\115\104\101\114"elseif is_calamari_closure then return"\067\097\108\097\109\097\114\105"elseif is_electron_closure then return"\069\108\101\099\116\114\111\110"elseif is_elysian_closure then return"\069\108\121\115\105\097\110"elseif getgenv and(getgenv()).scriptware then return"\083\099\114\105\112\116\087\097\114\101"elseif getgenv and(getgenv()).WRD_LOADED then return"\087\101\065\114\101\068\101\118\115"elseif getgenv and(getgenv()).OXYGEN_LOADED then return"\079\120\121\103\101\110"elseif getgenv and(getgenv()).jjsploit then return"\074\074\083\112\108\111\105\116"elseif EVON_LOADED then return"\069\118\111\110"elseif getgenv and(getgenv()).arceus then return"\065\114\099\101\117\115"elseif getgenv and(getgenv()).Xeno_Loaded then return"\088\101\110\111"elseif getgenv and(getgenv()).solara or SOLARA_LOADED then return"\083\111\108\097\114\097"elseif getgenv and(getgenv()).Bunni or bunni_loaded then return"\066\117\110\110\105"elseif getgenv and(getgenv()).Delta or DELTA_LOADED then return"\068\101\108\116\097"elseif getgenv and(getgenv()).Codex or CODEX_LOADED then return"\067\111\100\101\120"elseif getgenv and(getgenv()).Vega or VEGA_LOADED then return"\086\101\103\097"elseif getgenv and(getgenv()).Wave or WAVE_LOADED then return"\087\097\118\101"elseif getgenv and(getgenv()).Nihon or NIHON_LOADED then return"\078\105\104\111\110"elseif getgenv and(getgenv()).Celery or CELERY_LOADED then return"\067\101\108\101\114\121"elseif getgenv and(getgenv()).Valyse or VALYSE_LOADED then return"\086\097\108\121\115\101"elseif getgenv and(getgenv()).Trigon or TRIGON_LOADED then return"\084\114\105\103\111\110"elseif getgenv and(getgenv()).Ro_Exec or RO_EXEC_LOADED then return"\082\111\069\120\101\099"elseif getgenv and(getgenv()).Comet or COMET_LOADED then return"\067\111\109\101\116"elseif getgenv and(getgenv()).Hydrogen or HYDROGEN_LOADED then return"\072\121\100\114\111\103\101\110"elseif getgenv and(getgenv()).Incognito or INCOGNITO_LOADED then return"\073\110\099\111\103\110\105\116\111"elseif getgenv and(getgenv()).recursion or RECURSION_LOADED then return"\082\101\099\117\114\115\105\111\110"elseif getgenv and(getgenv()).zorara or ZORARA_LOADED then return"\090\111\114\097\114\097"elseif request or http_request or http and http.request then return"\071\101\110\101\114\105\099"elseif(game:GetService("\082\117\110\083\101\114\118\105\099\101")):IsStudio()then return"\083\116\117\100\105\111"else return"\085\110\107\110\111\119\110"end end local O0=o0()local function P0()if request then return request end if http_request then return http_request end if http.request then return http.request end if syn and syn.request then return syn.request end return function(Z)return J:RequestAsync(Z)end end local function a0(Z,L,j,o,O)if loadstring~=U then end if request and request~=r then end if http_request and http_request~=R then end local P=f..L local a={["\120-\097\112\105-\107\101\121"]=j,Authorization="\066\101\097\114\101\114 "..j,["\120-\104\119\105\100"]=O,["\067\111\110\116\101\110\116-\084\121\112\101"]="\097\112\112\108\105\099\097\116\105\111\110\047\106\115\111\110"}local F={Url=P;Method=Z;Headers=a,Body=o and J:JSONEncode(o)or nil}local I=P0()local H,B=pcall(function()return I(F)end)if not H then if not j0 and not J.HttpEnabled then return{success=false,error="\072\084\084\080\095\068\073\083\065\066\076\069\068";message="\072\084\084\080 \114\101\113\117\101\115\116\115 \100\105\115\097\098\108\101\100\046 \069\110\097\098\108\101 \105\110 \071\097\109\101 \083\101\116\116\105\110\103\115 \062 \083\101\099\117\114\105\116\121 \062 \065\108\108\111\119 \072\084\084\080 \082\101\113\117\101\115\116\115\044 \111\114 \117\115\101 \097 \099\111\109\112\097\116\105\098\108\101 \101\120\101\099\117\116\111\114"}end return{success=false;error="\072\084\084\080\095\069\082\082\079\082",message="\082\101\113\117\101\115\116 \102\097\105\108\101\100\058 "..tostring(B)}end local x=B.Success or B.StatusCode and(B.StatusCode>=200 and B.StatusCode<300)if not x then end local C={success=x;statusCode=B.StatusCode or 200}if B.Body and B.Body~=""then local Z,L=pcall(function()return J:JSONDecode(B.Body)end)if Z then C.data=L else C.rawBody=B.Body end else end return C end function T.getLink(Z,L,j)e()Z0()if not L0 then error("\226\154\160\239\184\143 \083\101\099\117\114\105\116\121 \099\104\101\099\107 \102\097\105\108\101\100 - \083\068\075 \099\111\109\112\114\111\109\105\115\101\100")end if not Z or Z==""then return{success=false;error="\073\078\086\065\076\073\068\095\065\080\073\095\075\069\089",message="\065\080\073 \107\101\121 \105\115 \114\101\113\117\105\114\101\100"}end if not j or j==""then return{success=false;error="\073\078\086\065\076\073\068\095\083\069\082\086\073\067\069";message="\083\101\114\118\105\099\101 \105\115 \114\101\113\117\105\114\101\100"}end if not L or L==""then return{success=false;error="\073\078\086\065\076\073\068\095\080\082\079\086\073\068\069\082";message="\080\114\111\118\105\100\101\114 \105\115 \114\101\113\117\105\114\101\100"}end local o=generateHWID()if loadstring~=U or request and request~=r then end local O="\047\102\108\111\119\047\103\101\116\076\105\110\107\063\112\114\111\118\105\100\101\114\061"..(J:UrlEncode(L)..("\038\115\101\114\118\105\099\101\061"..(J:UrlEncode(j)..("\038\101\120\101\099\117\116\111\114\061"..J:UrlEncode(O0)))))local P=a0("\071\069\084",O,Z,nil,o)if P.success and P.data then rawset(_G,"\095\095\106\117\110\107\105\101\095\108\097\115\116\095\108\105\110\107\095\116\105\109\101",os.clock())return P.data.url or P.data.link else return nil end end local F0={}F0.__index=F0 function F0.new(Z,L)local j=setmetatable({},F0)j.apiKey=Z j.baseUrl=L or f j.publicKeys={}j.challengeToken=nil j.initialized=false return j end function F0.generateFingerprint(j,Z,L)local o,O=pcall(function()local j={"\049\050\055\046\048\046\048\046\049","\082\111\098\108\111\120","\097\112\112\108\105\099\097\116\105\111\110\047\106\115\111\110",string.sub(Z,1,8),string.sub(L,1,8);(tostring(os.time()*1000)):sub(-6)}local o=table.concat(j,"\124")local O=""local P=0 for Z=1,#o,1 do local L=string.byte(o,Z)P=(P+L*Z)%4294967295 end for Z=1,16,1 do local L=((P*Z)*2654435761)%4294967295 O=O..string.format("\037\048\056\120",L)end local a=O:sub(1,32)return a end)if o then return O else local Z=(game:GetService("\072\116\116\112\083\101\114\118\105\099\101")):GenerateGUID(false)..((game:GetService("\072\116\116\112\083\101\114\118\105\099\101")):GenerateGUID(false)):sub(1,8)return Z end end function F0.makeSecureRequest(j,Z,L)local o=a0(L.method or"\071\069\084",Z,j.apiKey,L.body,j.hwid or"\104\097\114\100\101\110\101\100")if o and o.success then return o,nil else return nil,o and o.error or"\082\101\113\117\101\115\116 \102\097\105\108\101\100"end end function F0.initialize(Z)local L="\047\102\108\111\119\047\104\097\114\100\101\110\101\100\047\112\117\098\108\105\099\075\101\121\115"local j,o=Z:makeSecureRequest(L,{method="\071\069\084"})if not j or not j.success then warn("\070\097\105\108\101\100 \116\111 \105\110\105\116\105\097\108\105\122\101 \104\097\114\100\101\110\101\100 \083\068\075\058 "..tostring(o))return false end if j.data and(j.data.signature and j.data.keyId)then if j.data.data and j.data.data.publicKeys then for L,j in ipairs(j.data.data.publicKeys)do Z.publicKeys[j.keyId]=j.publicKey end else end elseif j.data and j.data.publicKeys then for L,j in ipairs(j.data.publicKeys)do Z.publicKeys[j.keyId]=j.publicKey end else end local O=0 for Z,L in pairs(Z.publicKeys)do O=O+1 end Z.initialized=true return true end function F0.generateChallenge(Z)local L="\047\102\108\111\119\047\104\097\114\100\101\110\101\100\047\099\104\097\108\108\101\110\103\101"local j,o=Z:makeSecureRequest(L,{method="\071\069\084"})if j and(j.success and(j.data and j.data.challenge))then Z.challengeToken=j.data.challenge return true end local O="\048\049\050\051\052\053\054\055\056\057\097\098\099\100\101\102"local P=""for Z=1,64,1 do local L=math.random(1,16)P=P..string.sub(O,L,L)end Z.challengeToken=P return true end local function I0(Z)local L={}for j=1,#Z,1 do L[j]=tonumber(string.sub(Z,j,j))or 0 end return L end local function H0(Z)local L={}for j=1,#Z,1 do L[j]=Z[j]end return L end local function B0(Z,L)local j={}for L=1,L,1 do j[L]=Z[L]or 0 end return j end local function x0(Z)return H0(Z)end function simpleBase64Decode(Z)if not Z or type(Z)~="\115\116\114\105\110\103"or#Z==0 then return nil end local L="\065\066\067\068\069\070\071\072\073\074\075\076\077\078\079\080\081\082\083\084\085\086\087\088\089\090\097\098\099\100\101\102\103\104\105\106\107\108\109\110\111\112\113\114\115\116\117\118\119\120\121\122\048\049\050\051\052\053\054\055\056\057\043\047"local j={}for Z=1,64,1 do j[string.sub(L,Z,Z)]=Z-1 end j["\061"]=0 local o={}local O=1 while O<=#Z do local L=j[string.sub(Z,O,O)]or 0 local P=j[string.sub(Z,O+1,O+1)]or 0 local a=j[string.sub(Z,O+2,O+2)]or 0 local F=j[string.sub(Z,O+3,O+3)]or 0 local I=((L*262144+P*4096)+a*64)+F if O+1<=#Z then table.insert(o,math.floor(I/65536)%256)end if O+2<=#Z and string.sub(Z,O+2,O+2)~="\061"then table.insert(o,math.floor(I/256)%256)end if O+3<=#Z and string.sub(Z,O+3,O+3)~="\061"then table.insert(o,I%256)end O=O+4 end local P=""for Z=1,#o,1 do if o[Z]>=0 and o[Z]<=255 then P=P..string.char(o[Z])end end return P end function parseRSAPublicKey(Z)if not Z or type(Z)~="\115\116\114\105\110\103"then return nil,nil end if#Z<100 then return nil,nil end if not string.find(Z,"\066\069\071\073\078")or not string.find(Z,"\069\078\068")then return nil,nil end local L=string.gsub(Z,"\037-\037-\037-\037-\037-\091\094\037-\093\042\037-\037-\037-\037-\037-","")L=string.gsub(L,"\037\115\043","")if#L<200 then return nil,nil end local j,o=pcall(function()return simpleBase64Decode(L)end)if not j then local Z,j=pcall(function()return base64Decode(L)end)if Z and j then o=j else return nil,nil end end if not o then return nil,nil end if#o<200 then return nil,nil end local function O(Z,L)if L<1 or L>#Z then return nil end return string.byte(Z,L)end local P=1 local a=nil local F=nil local I=0 local H=0 if O(o,P)~=48 then return nil,nil end P=P+1 local B=O(o,P)if not B then return nil,nil end if B>127 then local Z=B-128 if Z>4 then return nil,nil end P=(P+1)+Z else P=P+1 end if O(o,P)==48 then P=P+1 local Z=O(o,P)P=(P+Z)+1 end if O(o,P)==3 then P=P+1 local Z=O(o,P)P=P+1 end if O(o,P)==48 then P=P+1 local Z=O(o,P)P=P+1 if O(o,P)==2 then P=P+1 local Z=O(o,P)a=P+1 I=Z if O(o,a)==0 then a=a+1 I=I-1 end P=(P+Z)+1 if O(o,P)==2 then P=P+1 local Z=O(o,P)P=P+1 local L=0 for Z=0,Z-1,1 do local j=O(o,P+Z)if j then L=L*256+j end end H=L end end end if not a then for Z=P,math.min(P+200,#o),1 do if O(o,Z)==2 then local L=O(o,Z+1)if L and(L>100 and not a)then a=Z+2 I=L if O(o,a)==0 then a=a+1 I=I-1 end elseif L and(L<=8 and(a and not F))then F=Z+2 H=0 for Z=0,L-1,1 do local L=O(o,F+Z)if L then H=H*256+L end end break end end end if not a then local Z=0 local L=nil local j=0 for P=P,math.min(P+200,#o),1 do if O(o,P)==2 then local a=O(o,P+1)if a and a>Z then Z=a L=P+2 j=a end end end if L and j>50 then a=L I=j if O(o,a)==0 then a=a+1 I=I-1 end end end if not F or H==0 then for Z=P,math.min(P+200,#o),1 do if O(o,Z)==2 then local L=O(o,Z+1)if L and(L<=8 and L>0)then local j=Z+2 local P=0 for Z=0,L-1,1 do local L=O(o,j+Z)if L then P=P*256+L end end if P==65537 or P==3 then F=j H=P break end end end end end end local x={}if a and(I>=100 and I<=300)then for Z=1,math.min(I,256),1 do local L=O(o,(a+Z)-1)if L then x[Z]=L else return nil,nil end end else return nil,nil end if H==0 then H=65537 elseif H~=65537 and H~=3 then H=65537 end return x,H end local function C0(Z,L)if#Z~=256 then return false,"\073\110\118\097\108\105\100 \115\105\103\110\097\116\117\114\101 \108\101\110\103\116\104"end local j=0 local o=0 for L=1,#Z,1 do if Z[L]==0 then j=j+1 end if Z[L]>o then o=Z[L]end end if j>50 then return false,"\083\105\103\110\097\116\117\114\101 \102\111\114\109\097\116 \105\110\118\097\108\105\100 - \116\111\111 \109\097\110\121 \122\101\114\111\115"end if o<128 then return false,"\083\105\103\110\097\116\117\114\101 \102\111\114\109\097\116 \105\110\118\097\108\105\100 - \105\110\115\117\102\102\105\099\105\101\110\116 \101\110\116\114\111\112\121"end local O,P=parseRSAPublicKey(L)if not O or not P then return false,"\073\110\118\097\108\105\100 \112\117\098\108\105\099 \107\101\121 \102\111\114\109\097\116"end if not O or#O<100 or#O>300 then return false,"\073\110\118\097\108\105\100 \082\083\065 \107\101\121 \115\105\122\101"end if P~=65537 and P~=3 then return false,"\085\110\117\115\117\097\108 \082\083\065 \101\120\112\111\110\101\110\116"end return true,nil end local function d0(Z,L,j)local o,O=C0(Z,j)if not o then return false,O end local P=sha256(L)if not P then return false,"\070\097\105\108\101\100 \116\111 \099\111\109\112\117\116\101 \109\101\115\115\097\103\101 \104\097\115\104"end if type(P)~="\115\116\114\105\110\103"or#P==0 then return false,"\073\110\118\097\108\105\100 \104\097\115\104 \114\101\115\117\108\116"end local a,F=parseRSAPublicKey(j)if not a or not F then return false,"\070\097\105\108\101\100 \116\111 \112\097\114\115\101 \082\083\065 \112\117\098\108\105\099 \107\101\121"end local I=""for Z=1,math.min(32,#a),1 do I=I..string.format("\037\048\050\120",a[Z])end local H=sha256(L..(I..tostring(F)))if not H then return false,"\070\097\105\108\101\100 \116\111 \099\111\109\112\117\116\101 \112\115\101\117\100\111-\115\105\103\110\097\116\117\114\101"end local B=""for L=1,#Z,1 do B=B..string.format("\037\048\050\120",Z[L])end local x=string.find(B,string.sub(P,1,16))local C=string.find(B,string.sub(I,1,16))return true,nil end function base64Decode(Z)if not Z or type(Z)~="\115\116\114\105\110\103"then return nil end if#Z==0 then return""end local L,j=pcall(function()return game:GetService("\072\116\116\112\083\101\114\118\105\099\101")end)if L and(j and j.JSONDecode)then local L=""local j="\065\066\067\068\069\070\071\072\073\074\075\076\077\078\079\080\081\082\083\084\085\086\087\088\089\090\097\098\099\100\101\102\103\104\105\106\107\108\109\110\111\112\113\114\115\116\117\118\119\120\121\122\048\049\050\051\052\053\054\055\056\057\043\047"for o=1,#Z,4 do local O=string.sub(Z,o,o+3)if#O>=2 then local Z={}for L=1,#O,1 do local o=string.sub(O,L,L)if o=="\061"then Z[L]=0 else local O=string.find(j,o)Z[L]=O and O-1 or 0 end end if#O>=2 then local j=(Z[1]or 0)*64+(Z[2]or 0)if#O>=3 then j=j*64+(Z[3]or 0)if#O==4 then j=j*64+(Z[4]or 0)end end if#O==4 then local Z=math.floor(j/65536)%256 local o=math.floor(j/256)%256 local O=j%256 L=L..(string.char(Z)..(string.char(o)..string.char(O)))elseif#O==3 then local Z=math.floor(j/256)%256 local o=j%256 L=L..(string.char(Z)..string.char(o))elseif#O==2 then local Z=j%256 L=L..string.char(Z)end end end end if#Z==344 and string.sub(Z,-2)=="\061\061"then if#L>256 then L=string.sub(L,1,256)end else local j=0 if string.sub(Z,-1)=="\061"then j=j+1 if string.sub(Z,-2,-2)=="\061"then j=j+1 end end if j==1 and#L>0 then L=string.sub(L,1,#L-1)elseif j==2 and#L>1 then L=string.sub(L,1,#L-2)end end return L end local o="\065\066\067\068\069\070\071\072\073\074\075\076\077\078\079\080\081\082\083\084\085\086\087\088\089\090\097\098\099\100\101\102\103\104\105\106\107\108\109\110\111\112\113\114\115\116\117\118\119\120\121\122\048\049\050\051\052\053\054\055\056\057\043\047"local O={}for Z=1,64,1 do local L=string.sub(o,Z,Z)O[L]=Z-1 end O["\061"]=0 local P=Z local a=0 if string.sub(Z,-1)=="\061"then a=a+1 if string.sub(Z,-2,-2)=="\061"then a=a+1 end end if a>0 then P=string.sub(Z,1,#Z-a)end local F=""local I=1 local H=0 while I<=#P do local Z=math.min(4,(#P-I)+1)H=H+1 if H<=3 or H%50==0 then end local L=string.sub(P,I,I)local j=string.sub(P,I+1,I+1)local o=string.sub(P,I+2,I+2)local a=string.sub(P,I+3,I+3)local B=O[L]or 0 local x=O[j]or 0 local C=O[o]or 0 local d=O[a]or 0 if not O[L]and L~=""then end local i=((B*262144+x*4096)+C*64)+d if Z>=2 then local L=math.floor(i/65536)if L>=0 and L<=255 then F=F..string.char(L)else end if Z>=3 then local L=math.floor(i/256)%256 if L>=0 and L<=255 then F=F..string.char(L)else end if Z>=4 then local Z=i%256 if Z>=0 and Z<=255 then F=F..string.char(Z)else end end end end I=I+4 end if#Z==344 and string.sub(Z,-2)=="\061\061"then if#F>256 then F=string.sub(F,1,256)end else if a==1 then if#F>0 then F=string.sub(F,1,#F-1)end elseif a==2 then if#F>1 then F=string.sub(F,1,#F-2)end end end return F end function sha256(Z)if not Z then return nil end if type(Z)~="\115\116\114\105\110\103"then return nil end local L=0 local j,o=pcall(function()return#Z end)if j then L=o else L=0 end local O,P=pcall(function()local j=""local o=0 for L=1,L,1 do local j,O=pcall(function()return string.byte(Z,L)end)if j and O then o=(o+O*L)%1000000 end end for Z=1,16,1 do local L=((o*Z)*17)%1000000 local O=""local P=L for Z=1,6,1 do local L=P%16 P=math.floor(P/16)if L<10 then local Z,j=pcall(function()return tostring(L)end)if Z and j then O=j..O else O="\048"..O end else if L==10 then O="\097"..O elseif L==11 then O="\098"..O elseif L==12 then O="\099"..O elseif L==13 then O="\100"..O elseif L==14 then O="\101"..O elseif L==15 then O="\102"..O else O="\048"..O end end end while#O<6 do O="\048"..O end j=j..O end return j end)if O and P then return P else local Z=""for L=1,64,1 do Z=Z.."\048"end return Z end end local function i0(Z,L,j)local o=1 Z=Z%j while L>0 do if L%2==1 then o=(o*Z)%j end L=math.floor(L/2)Z=(Z*Z)%j end return o end local function l0(Z)local L=0 for j=1,#Z,1 do L=L*256+Z[j]end return L end local function q0(Z,L)local j={}for L=L,1,-1 do j[L]=Z%256 Z=math.floor(Z/256)end return j end local function p0(Z,L,j)if not Z or type(Z)~="\115\116\114\105\110\103"then return false,"\073\110\118\097\108\105\100 \109\101\115\115\097\103\101 \112\097\114\097\109\101\116\101\114"end if not L or type(L)~="\115\116\114\105\110\103"then return false,"\073\110\118\097\108\105\100 \115\105\103\110\097\116\117\114\101 \112\097\114\097\109\101\116\101\114"end if not j or type(j)~="\115\116\114\105\110\103"then return false,"\073\110\118\097\108\105\100 \112\117\098\108\105\099 \107\101\121 \112\097\114\097\109\101\116\101\114 - \101\120\112\101\099\116\101\100 \080\069\077 \115\116\114\105\110\103"end local o={}for Z=1,#L,1 do local j=string.sub(L,Z,Z)if not string.match(j,"\091\065-\090\097-\122\048-\057\043\047\037\061\093")then table.insert(o,j..(" \040\112\111\115 "..(Z.."\041")))end end if not string.match(L,"\094\091\065-\090\097-\122\048-\057\043\047\093\043\037\061\063\037\061\063\036")then local Z=string.gsub(L,"\091\094\065-\090\097-\122\048-\057\043\047\037\061\093","")if string.match(Z,"\094\091\065-\090\097-\122\048-\057\043\047\093\043\037\061\063\037\061\063\036")then L=Z else return false,"\073\110\118\097\108\105\100 \098\097\115\101\054\052 \115\105\103\110\097\116\117\114\101 \102\111\114\109\097\116"end end local O={}local P=base64Decode(L)local a={}for Z=1,math.min(10,#P),1 do table.insert(a,string.format("\037\048\050\088",string.byte(P,Z)))end for Z=1,#P,1 do table.insert(O,string.byte(P,Z))end if#O~=256 then return false,"\073\110\118\097\108\105\100 \115\105\103\110\097\116\117\114\101 \108\101\110\103\116\104 \102\111\114 \082\083\065 \050\048\052\056"end local F,I=d0(O,Z,j)if not F then return false,I end local H=true if H then return true,nil else return false,"\072\097\115\104 \109\105\115\109\097\116\099\104 - \115\105\103\110\097\116\117\114\101 \118\101\114\105\102\105\099\097\116\105\111\110 \102\097\105\108\101\100"end end function F0.verifyResponse(L,Z)if not L.initialized then return false,"\083\121\115\116\101\109 \110\111\116 \105\110\105\116\105\097\108\105\122\101\100\046 \067\097\108\108 \105\110\105\116\105\097\108\105\122\101\040\041 \102\105\114\115\116 \116\111 \108\111\097\100 \112\117\098\108\105\099 \107\101\121\115\046"end if not L.publicKeys or not next(L.publicKeys)then return false,"\078\111 \112\117\098\108\105\099 \107\101\121\115 \097\118\097\105\108\097\098\108\101\046 \077\097\107\101 \115\117\114\101 \105\110\105\116\105\097\108\105\122\101\040\041 \099\111\109\112\108\101\116\101\100 \115\117\099\099\101\115\115\102\117\108\108\121\046"end if not Z then return false,"\082\101\115\112\111\110\115\101 \100\097\116\097 \105\115 \110\105\108"end if not Z.signature then local L={}if Z then for Z,j in pairs(Z)do table.insert(L,tostring(Z))end end return false,"\073\110\118\097\108\105\100 \114\101\115\112\111\110\115\101 \102\111\114\109\097\116 - \115\105\103\110\097\116\117\114\101 \109\105\115\115\105\110\103"end if not Z.keyId then return false,"\073\110\118\097\108\105\100 \114\101\115\112\111\110\115\101 \102\111\114\109\097\116 - \107\101\121\073\100 \109\105\115\115\105\110\103"end if not L.publicKeys then return false,"\080\117\098\108\105\099 \107\101\121\115 \110\111\116 \105\110\105\116\105\097\108\105\122\101\100"end local j={}if L.publicKeys then for Z,L in pairs(L.publicKeys)do table.insert(j,tostring(Z))end end if not L.publicKeys[Z.keyId]then return false,"\085\110\107\110\111\119\110 \107\101\121 \073\068\058 "..tostring(Z.keyId)end local o=os.time()*1000 local O=300000 if o-Z.timestamp>O then return false,"\082\101\115\112\111\110\115\101 \116\111\111 \111\108\100 - \097\103\101\058 "..(tostring(o-Z.timestamp).."\109\115")end local P={data=Z.data,timestamp=Z.timestamp,nonce=Z.nonce;keyId=Z.keyId}local a=(game:GetService("\072\116\116\112\083\101\114\118\105\099\101")):JSONEncode(P)if L.publicKeys then for Z,L in pairs(L.publicKeys)do end end local F=L.publicKeys[Z.keyId]if not F then return false,"\080\117\098\108\105\099 \107\101\121 \110\111\116 \102\111\117\110\100 \102\111\114 \107\101\121\073\100\058 "..(tostring(Z.keyId).."\046 \077\097\107\101 \115\117\114\101 \116\111 \099\097\108\108 \105\110\105\116\105\097\108\105\122\101\040\041 \102\105\114\115\116\046")end local I,H=p0(a,Z.signature,F)if not I then return false,"\082\083\065 \115\105\103\110\097\116\117\114\101 \118\101\114\105\102\105\099\097\116\105\111\110 \102\097\105\108\101\100\058 "..tostring(H)end return true,nil end function F0.verifyKey(o,Z,L,j)local O=P0()if not O then return false,"\072\084\084\080 \102\117\110\099\116\105\111\110 \117\110\097\118\097\105\108\097\098\108\101"end local P=tostring(math.random(1000000,9999999))..("\095"..tostring(os.time()))if not o.initialized then if not o:initialize()then return false,"\070\097\105\108\101\100 \116\111 \105\110\105\116\105\097\108\105\122\101 \083\068\075"end end local a=o:generateFingerprint(Z,L)if not o.challengeToken then o:generateChallenge()else end local F={key=Z;hwid=L;timestamp=tostring(os.time()*1000),challenge=o.challengeToken;fingerprint=a;requestId=P}if j then F.service=j end local I=""for Z,L in pairs(F)do if I~=""then I=I.."\038"end I=I..(Z..("\061"..(game:GetService("\072\116\116\112\083\101\114\118\105\099\101")):UrlEncode(tostring(L))))end local H="\047\102\108\111\119\047\104\097\114\100\101\110\101\100\047\118\101\114\105\102\121\075\101\121\063"..I local B=nil local x,C=o:makeSecureRequest(H,{method="\071\069\084"})if x and x.success then if not x.data or type(x.data)~="\116\097\098\108\101"then return false,"\073\110\118\097\108\105\100 \114\101\115\112\111\110\115\101 \115\116\114\117\099\116\117\114\101"end if not x.data.signature or not x.data.keyId or not x.data.timestamp then local Z={}for L,j in pairs(x.data)do table.insert(Z,tostring(L))end return false,"\077\105\115\115\105\110\103 \099\114\121\112\116\111\103\114\097\112\104\105\099 \115\105\103\110\097\116\117\114\101"end local Z,L=o:verifyResponse(x.data)if not Z then return false,"\083\105\103\110\097\116\117\114\101 \118\101\114\105\102\105\099\097\116\105\111\110 \102\097\105\108\101\100\058 "..tostring(L)end if x.data.data and x.data.data._request_id then if x.data.data._request_id~=P then return false,"\082\101\113\117\101\115\116 \073\068 \118\097\108\105\100\097\116\105\111\110 \102\097\105\108\101\100"end else end local j={}for Z,L in pairs(x.data)do if not string.match(Z,"\094\095")then j[Z]=L end end local O={}if x.data.data then for Z,L in pairs(x.data.data)do if not string.match(Z,"\094\095")then O[Z]=L end end end local a={}if x.data.data.data then for Z,L in pairs(x.data.data.data)do if not string.match(Z,"\094\095")then a[Z]=L end end end local F=j.valid or O.valid or a.valid local I=a or O or j return F,I else B=C or x and x.error or"\082\101\113\117\101\115\116 \102\097\105\108\101\100"end return false,B or"\082\101\113\117\101\115\116 \102\097\105\108\101\100 \097\102\116\101\114 \114\101\116\114\105\101\115"end F0.activeSession=nil F0.responseDnaSeen={}function F0.fnv1aHash(L,Z)local j=2166136261 for L=1,#Z,1 do j=bit32.bxor(j,string.byte(Z,L))j=(j*16777619)%4294967296 end return tostring(j)end function F0.calculateKeyHash(L,Z)return(L:fnv1aHash(Z)):sub(1,16)end local function b0(Z)local L={}for j=1,#Z,1 do L[j]=string.byte(Z,j)end local j=0 for Z=1,#L,1 do j=(j*31+L[Z])%4294967296 end local o=""local O=j for Z=1,8,1 do local L=O%16 o=o..string.format("\037\120",L)O=math.floor(O/16)end return o:sub(1,32)end function F0.createConfirmationHash(j,Z,L)local o=Z..tostring(L)local O=b0(o)return O end function F0.validateResponseDNA(L,Z)if not Z or not Z.response_dna then return false end local j=Z.response_dna if L.responseDnaSeen[j]then return false,"\082\101\115\112\111\110\115\101 \068\078\065 \114\101\117\115\101\100 \040\114\101\112\108\097\121 \097\116\116\097\099\107\041"end L.responseDnaSeen[j]=true return true end function F0.validateServerState(L,Z)if not Z or not Z.timestamp then return false end local j=os.time()*1000 local o=j-Z.timestamp if math.abs(o)>300000 then return false,"\073\110\118\097\108\105\100 \114\101\115\112\111\110\115\101"end return true end function F0.performChallenge(j,Z,L)local o="\047\102\108\111\119\047\104\097\114\100\101\110\101\100\047\099\104\097\108\108\101\110\103\101"local O={hwid=Z;service=L}local P,a=j:makeSecureRequest(o,{method="\080\079\083\084",body=O})if not P then return nil,"\067\111\110\110\101\099\116\105\111\110 \102\097\105\108\101\100"end if not P.success then return nil,"\082\101\113\117\101\115\116 \102\097\105\108\101\100"end if P.data and P.data.signature then local Z,L=j:verifyResponse(P.data)if not Z then return nil,"\065\117\116\104\101\110\116\105\099\097\116\105\111\110 \102\097\105\108\101\100"end end local F=P.data.data and P.data.data.data or P.data.data or P.data if not F.session_id or not F.nonce or not F.challenge_hash then return nil,"\073\110\118\097\108\105\100 \114\101\115\112\111\110\115\101"end return{session_id=F.session_id;nonce=F.nonce,challenge_hash=F.challenge_hash;expires_at=F.expires_at,sequence_number=F.sequence_number}end function F0.performPreVerify(O,Z,L,j,o)local P=O:calculateKeyHash(j)local a="\047\102\108\111\119\047\104\097\114\100\101\110\101\100\047\112\114\101-\118\101\114\105\102\121"local F={session_id=Z,challenge_nonce=L;key_hash=P}local I,H=O:makeSecureRequest(a,{method="\080\079\083\084",body=F})if not I then return nil,"\067\111\110\110\101\099\116\105\111\110 \102\097\105\108\101\100"end if not I.success then return nil,"\082\101\113\117\101\115\116 \102\097\105\108\101\100"end if I.data and I.data.signature then local Z,L=O:verifyResponse(I.data)if not Z then return nil,"\065\117\116\104\101\110\116\105\099\097\116\105\111\110 \102\097\105\108\101\100"end end local B=I.data.data and I.data.data.data or I.data.data or I.data if not B.token then return nil,"\073\110\118\097\108\105\100 \114\101\115\112\111\110\115\101"end return{token=B.token,sequence_number=B.sequence_number}end function F0.performVerifyStaged(a,Z,L,j,o,O,P)local F={"\107\101\121\061"..J:UrlEncode(Z),"\104\119\105\100\061"..J:UrlEncode(L),"\115\101\115\115\105\111\110\095\105\100\061"..J:UrlEncode(o),"\099\104\097\108\108\101\110\103\101\095\110\111\110\099\101\061"..J:UrlEncode(O),"\112\114\101\095\118\101\114\105\102\121\095\116\111\107\101\110\061"..J:UrlEncode(P),"\116\105\109\101\115\116\097\109\112\061"..tostring(os.clock()*1000)}if j and j~=""then table.insert(F,"\115\101\114\118\105\099\101\061"..J:UrlEncode(j))end local I=table.concat(F,"\038")local H="\047\102\108\111\119\047\104\097\114\100\101\110\101\100\047\118\101\114\105\102\121\075\101\121-\115\116\097\103\101\100\063"..I local B,x=a:makeSecureRequest(H,{method="\071\069\084"})if not B then return false,nil,"\086\101\114\105\102\105\099\097\116\105\111\110 \102\097\105\108\101\100"end if not B.success then return false,nil,"\086\101\114\105\102\105\099\097\116\105\111\110 \102\097\105\108\101\100"end if B.data and B.data.signature then local Z,L=a:verifyResponse(B.data)if not Z then return false,nil,"\086\101\114\105\102\105\099\097\116\105\111\110 \102\097\105\108\101\100"end end local C=B.data.data and B.data.data.data or B.data.data or B.data local d,i=a:validateResponseDNA(C)if not d then return false,nil,"\086\101\114\105\102\105\099\097\116\105\111\110 \102\097\105\108\101\100"end if C.server_state then local Z,L=a:validateServerState(C.server_state)if not Z then return false,nil,"\086\101\114\105\102\105\099\097\116\105\111\110 \102\097\105\108\101\100"end end if C.used_nonce~=O then return false,nil,"\086\101\114\105\102\105\099\097\116\105\111\110 \102\097\105\108\101\100"end if C.challenge_confirmation~=a.activeSession.challenge_hash then return false,nil,"\086\101\114\105\102\105\099\097\116\105\111\110 \102\097\105\108\101\100"end if C.pre_verify_confirmation~=P then return false,nil,"\086\101\114\105\102\105\099\097\116\105\111\110 \102\097\105\108\101\100"end return C.valid,C,nil end function F0.performPostVerify(O,Z,L,j,o)local P=O:createConfirmationHash(L,j)local a="\047\102\108\111\119\047\104\097\114\100\101\110\101\100\047\112\111\115\116-\118\101\114\105\102\121"local F={session_id=Z,verification_token=L;confirmation_hash=P}local I,H=O:makeSecureRequest(a,{method="\080\079\083\084";body=F})if not I then return false,"\086\101\114\105\102\105\099\097\116\105\111\110 \102\097\105\108\101\100"end if not I.success then return false,"\086\101\114\105\102\105\099\097\116\105\111\110 \102\097\105\108\101\100"end if I.data and I.data.signature then local Z,L=O:verifyResponse(I.data)if not Z then return false,"\086\101\114\105\102\105\099\097\116\105\111\110 \102\097\105\108\101\100"end else end local B=I.data.data and I.data.data.data or I.data.data or I.data if not B.sequence_complete then return false,"\086\101\114\105\102\105\099\097\116\105\111\110 \102\097\105\108\101\100"end return true end function F0.verifyKeyMultiStage(o,Z,L,j)if not o.initialized then local Z=o:initialize()if not Z then return false,nil,"\070\097\105\108\101\100 \116\111 \105\110\105\116\105\097\108\105\122\101 \072\097\114\100\101\110\101\100\075\101\121\083\121\115\116\101\109"end end local O,P=o:performChallenge(L,j)if not O then return false,nil,"\067\104\097\108\108\101\110\103\101 \102\097\105\108\101\100\058 "..tostring(P)end o.activeSession=O wait(math.random(10,30)/100)local a,F=o:performPreVerify(O.session_id,O.nonce,Z,L)if not a then o.activeSession=nil return false,nil,"\080\114\101-\118\101\114\105\102\121 \102\097\105\108\101\100\058 "..tostring(F)end wait(math.random(10,30)/100)local I,H,B=o:performVerifyStaged(Z,L,j,O.session_id,O.nonce,a.token)if not I then o.activeSession=nil return false,H,B or"\086\101\114\105\102\105\099\097\116\105\111\110 \102\097\105\108\101\100"end if H.verification_token then wait(math.random(5,15)/100)local Z,j=o:performPostVerify(O.session_id,H.verification_token,H.server_state and H.server_state.timestamp or os.clock()*1000,L)if not Z then return false,"\086\101\114\105\102\105\099\097\116\105\111\110 \102\097\105\108\101\100"else end else end o.activeSession=nil return I,H end function F0.performIsKeylessStaged(P,Z,L,j,o,O)local a={"\115\101\114\118\105\099\101\061"..J:UrlEncode(Z),"\104\119\105\100\061"..J:UrlEncode(L);"\115\101\115\115\105\111\110\095\105\100\061"..J:UrlEncode(j),"\099\104\097\108\108\101\110\103\101\095\110\111\110\099\101\061"..J:UrlEncode(o);"\112\114\101\095\118\101\114\105\102\121\095\116\111\107\101\110\061"..J:UrlEncode(O),"\116\105\109\101\115\116\097\109\112\061"..tostring(os.clock()*1000)}local F=table.concat(a,"\038")local I="\047\102\108\111\119\047\104\097\114\100\101\110\101\100\047\105\115\075\101\121\108\101\115\115\077\111\100\101-\115\116\097\103\101\100\063"..F local H,B=P:makeSecureRequest(I,{method="\071\069\084"})if not H or not H.success then return false,nil,B or"\105\115\075\101\121\108\101\115\115 \114\101\113\117\101\115\116 \102\097\105\108\101\100"end if H.data and H.data.signature then local Z,L=P:verifyResponse(H.data)if not Z then return false,nil,"\105\115\075\101\121\108\101\115\115 \115\105\103\110\097\116\117\114\101 \118\101\114\105\102\105\099\097\116\105\111\110 \102\097\105\108\101\100\058 "..tostring(L)end end local x=H.data.data and H.data.data.data or H.data.data or H.data local C,d=P:validateResponseDNA(x)if not C then return false,nil,"\086\101\114\105\102\105\099\097\116\105\111\110 \102\097\105\108\101\100"end if x.server_state then local Z,L=P:validateServerState(x.server_state)if not Z then return false,nil,"\086\101\114\105\102\105\099\097\116\105\111\110 \102\097\105\108\101\100"end end if x.used_nonce~=o then return false,nil,"\086\101\114\105\102\105\099\097\116\105\111\110 \102\097\105\108\101\100"end if x.challenge_confirmation~=P.activeSession.challenge_hash then return false,nil,"\086\101\114\105\102\105\099\097\116\105\111\110 \102\097\105\108\101\100"end if x.pre_verify_confirmation~=O then return false,nil,"\086\101\114\105\102\105\099\097\116\105\111\110 \102\097\105\108\101\100"end return x.keyless_mode==true,x,nil end function F0.isKeylessModeMultiStage(j,Z,L)if not j.initialized then local Z=j:initialize()if not Z then return false,nil,"\070\097\105\108\101\100 \116\111 \105\110\105\116\105\097\108\105\122\101 \072\097\114\100\101\110\101\100\075\101\121\083\121\115\116\101\109"end end local o,O=j:performChallenge(L,Z)if not o then return false,nil,"\067\104\097\108\108\101\110\103\101 \102\097\105\108\101\100\058 "..tostring(O)end j.activeSession=o wait(math.random(10,30)/100)local P,a=j:performPreVerify(o.session_id,o.nonce,Z,L)if not P then j.activeSession=nil return false,nil,"\080\114\101-\118\101\114\105\102\121 \102\097\105\108\101\100\058 "..tostring(a)end wait(math.random(10,30)/100)local F,I,H=j:performIsKeylessStaged(Z,L,o.session_id,o.nonce,P.token)if not F and H then j.activeSession=nil return false,I,H end if I and I.verification_token then wait(math.random(5,15)/100)local Z,O=j:performPostVerify(o.session_id,I.verification_token,I.server_state and I.server_state.timestamp or os.clock()*1000,L)if not Z then return false,Z,O else end end j.activeSession=nil return F,I end function T.verifyKey(Z,L,j)e()Z0()if not L0 then return false end if not Z or Z==""then return false end if not L or L==""then return false end local o=generateHWID()if loadstring~=U or request and request~=r or http_request and http_request~=R then return false end local O=getfenv()if not O or type(O)~="\116\097\098\108\101"then return false end local P=F0.new(Z,f)local a,F a,F=P:verifyKeyMultiStage(L,o,j)if a then rawset(_G,"\095\095\106\117\110\107\105\101\095\099\114\101\097\116\101\100\095\097\116",F.created_at or 0)rawset(_G,"\095\095\106\117\110\107\105\101\095\105\115\095\105\110\118\097\108\105\100\097\116\101\100",F.is_invalidated==true)rawset(_G,"\095\095\106\117\110\107\105\101\095\105\115\095\104\119\105\100\098\097\110\110\101\100",F.is_hwidbanned==true)rawset(_G,"\095\095\106\117\110\107\105\101\095\115\101\099\117\114\105\116\121\095\108\101\118\101\108","\104\097\114\100\101\110\101\100")return true else return false end end function T.getHWID()e()return generateHWID()end local function X0()local Z=type(T)if Z~="\116\097\098\108\101"then end if not T.getLink or type(T.getLink)~="\102\117\110\099\116\105\111\110"then end if not T.verifyKey or type(T.verifyKey)~="\102\117\110\099\116\105\111\110"then end local L=tostring(T)if not string.find(L,"\116\097\098\108\101")then end return true end function T.isKeylessMode(Z,L)e()Z0()if not L0 then return{success=false,error="\083\069\067\085\082\073\084\089\095\067\072\069\067\075\095\070\065\073\076\069\068",message="\083\101\099\117\114\105\116\121 \099\104\101\099\107\115 \102\097\105\108\101\100"}end if not Z or Z==""then return{success=false;error="\073\078\086\065\076\073\068\095\065\080\073\095\075\069\089";message="\065\080\073 \107\101\121 \105\115 \114\101\113\117\105\114\101\100"}end if not L or L==""then return{success=false;error="\073\078\086\065\076\073\068\095\083\069\082\086\073\067\069\095\078\065\077\069";message="\083\101\114\118\105\099\101 \110\097\109\101 \105\115 \114\101\113\117\105\114\101\100"}end local j=generateHWID()if loadstring~=U or request and request~=r or http_request and http_request~=R then return{success=false;error="\072\079\079\075\095\068\069\084\069\067\084\069\068",message="\072\084\084\080 \102\117\110\099\116\105\111\110\115 \104\097\118\101 \098\101\101\110 \104\111\111\107\101\100"}end local o=getfenv()if not o or type(o)~="\116\097\098\108\101"then return{success=false,error="\069\078\086\073\082\079\078\077\069\078\084\095\069\082\082\079\082",message="\069\110\118\105\114\111\110\109\101\110\116 \105\110\116\101\103\114\105\116\121 \099\104\101\099\107 \102\097\105\108\101\100"}end local O=F0.new(Z,f)if not O.initialized then if not O:initialize()then return{success=false,error="\073\078\073\084\073\065\076\073\090\065\084\073\079\078\095\070\065\073\076\069\068",message="\070\097\105\108\101\100 \116\111 \105\110\105\116\105\097\108\105\122\101 \104\097\114\100\101\110\101\100 \115\121\115\116\101\109"}end end local P=false local a=nil P,response_data=O:isKeylessModeMultiStage(L,j)if response_data and response_data.obfuscation_hash then a=response_data.obfuscation_hash end if not P then return{success=false,error="\077\085\076\084\073\095\083\084\065\071\069\095\070\065\073\076\069\068";message="\077\117\108\116\105-\115\116\097\103\101 \118\101\114\105\102\105\099\097\116\105\111\110 \102\097\105\108\101\100"}end return{success=true;keyless_mode=P;obfuscation_hash=a;message=P and"\075\101\121\108\101\115\115 \109\111\100\101 \105\115 \101\110\097\098\108\101\100"or"\075\101\121\108\101\115\115 \109\111\100\101 \105\115 \100\105\115\097\098\108\101\100"}end X0()local z0=T and T.verifyKey or nil local k0=z0 local u0=z0 local S0=T and T.getLink or nil local s0=S0 local h0=T and T.isKeylessMode or nil local w0=JunkieKeySystemUI and JunkieKeySystemUI.quickStart or nil local A0=z0 local K0=k0 local N0=u0 local c0=S0 local V0=s0 local T0=h0 local f0=w0 local J0={vhash=A0 and K(A0)or"\110\105\108",lhash=c0 and K(c0)or"\110\105\108";ihash=T0 and K(T0)or"\110\105\108",uihash=f0 and K(f0)or"\110\105\108"}local n0=false local g0=nil local M0=nil local U0=0 local y0=nil local m0=nil local r0={}local function R0()local Z="\095\095\106\117\110\107\105\101\095\109\114\107\095"..h("\077\075",j)return{{name=Z.."\095\115",type="\115\116\114\105\110\103",value=h("\111\107\058"..F(d()),j)};{name=Z.."\095\110";type="\110\117\109\098\101\114";value=u(d()%1000000)};{name=Z.."\095\116",type="\116\097\098\108\101";value={__k=h("\118"..F(d()),j)}}}end local E0=false local function v0(Z)n0=true game.Players.LocalPlayer:kick("\065\110 \069\114\114\111\114 \079\099\099\117\114\114\101\100\046 \080\108\101\097\115\101 \082\101\116\114\121\033")end local function Y0()if a(I)~="\102\117\110\099\116\105\111\110"then return false,"\112\099\097\108\108\095\109\105\115\115\105\110\103"end if a(string.dump)~="\102\117\110\099\116\105\111\110"then return false,"\115\116\114\105\110\103\095\100\117\109\112\095\109\105\115\115\105\110\103"end if a(B)~="\102\117\110\099\116\105\111\110"then return false,"\099\111\114\111\117\116\105\110\101\095\109\105\115\115\105\110\103"end if a(debug)~="\116\097\098\108\101"then return false,"\100\101\098\117\103\095\109\105\115\115\105\110\103"end if a(debug.getinfo)~="\102\117\110\099\116\105\111\110"then return false,"\100\101\098\117\103\095\103\101\116\105\110\102\111\095\109\105\115\115\105\110\103"end return true end local function W0(Z)if Z.type=="\102\117\110\099\116\105\111\110"or Z.type=="\116\097\098\108\101"then b(_G,Z.name,Z.value)else b(_G,Z.name,Z.value)end end local function D0(Z)if rawget_local then return rawget_local(_G,Z.name)end return _G[Z.name]end local function t0(Z)local L=D0(Z)if Z.type=="\102\117\110\099\116\105\111\110"then local j=safe_dump(Z.value)local o=safe_dump(L)return j~=nil and(o~=nil and j==o)elseif Z.type=="\115\116\114\105\110\103"then return a(L)=="\115\116\114\105\110\103"and L==Z.value elseif Z.type=="\110\117\109\098\101\114"then return a(L)=="\110\117\109\098\101\114"and L==Z.value elseif Z.type=="\116\097\098\108\101"then if a(L)~="\116\097\098\108\101"then return false end if L.__k~=Z.value.__k then return false end return true else return L==Z.value end end local Q0=3 local G0=.5 local e0=.4 local function ZI()g0=g0 or V and V()or.01 local L=0 x(B(function()while not n0 do local j=Z+(k()-.5)*e0 if j<G0 then j=G0 end local o,O,P=I(function()local Z,L=Y0()if not Z then return false,"\101\110\118\095\098\097\100\058"..F(L)end local j=I(function()local Z=0 for L=1,200+k(0,200),1 do Z=Z+L end return Z end)if not j then return false,"\109\105\099\114\111\095\101\114\114"end if A0 and J0.vhash~="\110\105\108"then if K(A0)~=J0.vhash then return false,"\118\095\109\105\115\109\097\116\099\104\095\049"end if K0 and K(K0)~=J0.vhash then return false,"\118\095\109\105\115\109\097\116\099\104\095\050"end if N0 and K(N0)~=J0.vhash then return false,"\118\095\109\105\115\109\097\116\099\104\095\051"end end if c0 and J0.lhash~="\110\105\108"then if K(c0)~=J0.lhash then return false,"\108\095\109\105\115\109\097\116\099\104\095\049"end if V0 and K(V0)~=J0.lhash then return false,"\108\095\109\105\115\109\097\116\099\104\095\050"end end if E0 then for Z=1,#r0,1 do local L=r0[Z]if not t0(L)then return false,"\109\097\114\107\101\114\095\109\105\115\109\097\116\099\104\058"..F(L.name)end end end return true,nil end)if not o then L=L+1 else if O==true or O==nil then L=0 else L=L+1 end end if L>=Q0 then local Z="\104\101\097\114\116\098\101\097\116\095\102\097\105\108\101\100\095\099\111\117\110\116\061"..F(L)v0(Z)break end local a=d()while d()-a<j do C()end end end))end local function LI()local Z=u(d()*1000)%1000000 local L=k(100000,999999)local o=F(Z)..("-"..(F(L)..("-"..F(k()))))return h(o,j)end local jI=nil local function oI(Z,L,j)if n0 then v0("\115\101\099\117\114\101\095\103\101\116\095\108\105\110\107\095\099\097\108\108\101\100\095\097\102\116\101\114\095\116\097\109\112\101\114")end if a(c0)~="\102\117\110\099\116\105\111\110"then v0("\103\101\116\076\105\110\107\095\109\105\115\115\105\110\103")end local o,O=I(function()return c0(Z,L,j)end)if not o then v0("\103\101\116\076\105\110\107\095\101\114\114\111\114")end if a(O)=="\115\116\114\105\110\103"and#O>0 then M0=d()U0=0 return O end return O end local function OI(Z,L,j)if n0 then v0("\115\101\099\117\114\101\095\118\101\114\105\102\121\095\099\097\108\108\101\100\095\097\102\116\101\114\095\116\097\109\112\101\114")end if M0 and d()-M0<o then U0=U0+1 y0=d()if U0>=O then v0("\116\111\111\095\109\097\110\121\095\102\097\115\116\095\097\116\116\101\109\112\116\115")end return false end local P,a,H=I(A0,Z,L,j)if not P then v0("\118\101\114\105\102\121\075\101\121\095\101\114\114\111\114")end local i=false local l=nil if P then i=a==true l=H end if i then if not E0 then r0=R0()for Z=1,#r0,1 do local L=r0[Z]local j,o=I(function()W0(L)end)if not j then v0("\109\097\114\107\101\114\095\115\101\116\095\102\097\105\108\101\100\058"..F(L.name))end end for Z=1,#r0,1 do local L=r0[Z]local j,o=I(function()return t0(L)end)if not j or not o then v0("\109\097\114\107\101\114\095\118\101\114\105\102\121\095\102\097\105\108\101\100\058"..F(L.name))end end E0=true else r0=R0()for Z=1,#r0,1 do local L=r0[Z]local j=I(function()W0(L)end)if not j then v0("\109\097\114\107\101\114\095\114\111\116\097\116\101\095\115\101\116\095\102\097\105\108\101\100\058"..F(L.name))end end end if JunkieProtected and(JunkieProtected.OBFUSCATION_HASH and JunkieProtected.OBFUSCATION_HASH~="\079\066\070\085\083\067\065\084\073\079\078\095\072\065\083\072\095\080\076\065\067\069\072\079\076\068\069\082")then local Z=false if l and l.obfuscation_hash then Z=verify_obfuscation_hash(l)end if not Z then v0("\109\097\110\100\097\116\111\114\121\095\104\097\115\104\095\118\101\114\105\102\105\099\097\116\105\111\110\095\102\097\105\108\101\100")end end m0=d()M0=nil U0=0 return true else U0=U0+1 y0=d()local Z=S(1+U0,8)x(B(function()for Z=1,Z,1 do C()end end))if U0>=O then v0("\116\111\111\095\109\097\110\121\095\102\097\105\108\101\100\095\118\097\108\105\100\097\116\105\111\110\115")end return false end end local function PI(Z,L)if n0 then v0("\105\115\095\107\101\121\108\101\115\115\095\099\097\108\108\101\100\095\097\102\116\101\114\095\116\097\109\112\101\114")end if a(T0)~="\102\117\110\099\116\105\111\110"then v0("\105\115\075\101\121\108\101\115\115\095\109\105\115\115\105\110\103")end local j,o=I(T0,Z,L)if not j then v0("\105\115\075\101\121\108\101\115\115\095\101\114\114\111\114")end local O=false local P=nil if j and(o and a(o)=="\116\097\098\108\101")then if o.success and o.keyless_mode then O=true if o.obfuscation_hash then P=o.obfuscation_hash elseif o.data and o.data.obfuscation_hash then P=o.data.obfuscation_hash end if JunkieProtected and(JunkieProtected.OBFUSCATION_HASH and JunkieProtected.OBFUSCATION_HASH~="\079\066\070\085\083\067\065\084\073\079\078\095\072\065\083\072\095\080\076\065\067\069\072\079\076\068\069\082")then if not verify_obfuscation_hash(o)then v0("\107\101\121\108\101\115\115\095\104\097\115\104\095\118\101\114\105\102\105\099\097\116\105\111\110\095\102\097\105\108\101\100")end end end end return O end local function aI(Z,L)if n0 then v0("\113\117\105\099\107\083\116\097\114\116\095\099\097\108\108\101\100\095\097\102\116\101\114\095\116\097\109\112\101\114")end if a(f0)~="\102\117\110\099\116\105\111\110"then v0("\113\117\105\099\107\083\116\097\114\116\095\109\105\115\115\105\110\103")end I(function()f0(Z,L)end)end local FI={}FI.API_KEY="\065\080\073\095\075\069\089\095\080\076\065\067\069\072\079\076\068\069\082"FI.PROVIDER="\077\105\120\101\100"FI.SERVICE_ID="\068\101\102\097\117\108\116"FI.OBFUSCATION_HASH="\054\057\053\054\051\050\051\048\097\051\098\100\054\049\056\049\099\049\051\052\056\102\099\055\057\098\049\098\097\100\048\098"FI.MULTI_STAGE_ENABLED=true function FI.ValidateKey(Z)Z=Z or{}local L=Z.Key or _G.SCRIPT_KEY or nil local j=Z.Service or FI.SERVICE_ID if not L then return"\110\111\095\107\101\121"end local o=OI(FI.API_KEY,L,j)if o then return"\118\097\108\105\100"else return"\105\110\118\097\108\105\100"end end function FI.GetKeyLink(Z)local L=Z and Z.Service or FI.SERVICE_ID return oI(FI.API_KEY,FI.PROVIDER,L)end function FI.IsKeylessMode(Z)Z=Z or{}local L=Z.Service or FI.SERVICE_ID local j=PI(FI.API_KEY,L)return{keyless_mode=j}end function FI.QuickStartUI(Z)aI(FI.API_KEY,Z)end local function II(Z)if n0 then return false end local L=nil if a(Z)=="\116\097\098\108\101"then if Z.obfuscation_hash then L=Z.obfuscation_hash elseif Z.data and Z.data.obfuscation_hash then L=Z.data.obfuscation_hash end end if not L or L==""then return false end local j=FI.OBFUSCATION_HASH if j=="\079\066\070\085\083\067\065\084\073\079\078\095\072\065\083\072\095\080\076\065\067\069\072\079\076\068\069\082"then return false end local o=j==L if not o then v0("\115\099\114\105\112\116\095\104\097\115\104\095\109\105\115\109\097\116\099\104")end return o end function FI.VerifyScriptHash(Z)return II({obfuscation_hash=Z})end _G.JunkieProtected=FI N(_G)J0={vhash=_orig_verifyKey and K(_orig_verifyKey)or"\110\105\108";lhash=_orig_getLink and K(_orig_getLink)or"\110\105\108",ihash=_orig_isKeyless and K(_orig_isKeyless)or"\110\105\108";uihash=_orig_quickStart and K(_orig_quickStart)or"\110\105\108"}ZI()local function HI()local Z=game:GetService("\080\108\097\121\101\114\115")local L=Z.LocalPlayer local j="\075\108\121\114\111\088\109\118\115\100"local o="\104\116\116\112\115\058\047\047\100\105\115\099\111\114\100\046\103\103\047\113\106\107\100\071\119\065\052\085"local O="\104\116\116\112\115\058\047\047\114\097\119\046\103\105\116\104\117\098\117\115\101\114\099\111\110\116\101\110\116\046\099\111\109\047\104\052\052\114\100-\117\105\047\077\117\114\100\101\114\118\115\083\104\101\114\105\102\102\046\108\117\097\047\114\101\102\115\047\104\101\097\100\115\047\109\097\105\110\047\111\098\102\117\115\099\097\116\101\100\095\115\099\114\105\112\116-\077\117\114\100\101\114\118\115\104\101\114\105\102\102\108\117\097\046\116\120\116"local P,a=pcall(function()return(loadstring(game:HttpGet("\104\116\116\112\115\058\047\047\103\105\116\104\117\098\046\099\111\109\047\070\111\111\116\097\103\101\115\117\115\047\087\105\110\100\085\073\047\114\101\108\101\097\115\101\115\047\108\097\116\101\115\116\047\100\111\119\110\108\111\097\100\047\109\097\105\110\046\108\117\097")))()end)if not P or not a then warn("\070\097\108\104\097 \097\111 \099\097\114\114\101\103\097\114 \087\105\110\100\085\073\058",a)return end a.Services=a.Services or{}a.Services.klyro_service={Name="\075\108\121\114\111 \075\101\121 \083\101\114\118\105\099\101",Icon="\107\101\121";Args={"\083\101\114\118\105\099\101\073\100"};New=function(Z)local function L(Z)if not Z or type(Z)~="\115\116\114\105\110\103"then return false,"\075\101\121 \105\110\118\195\161\108\105\100\097\033"end local L=((tostring(Z)):gsub("\037\115\043","")):upper()local o=((tostring(j)):gsub("\037\115\043","")):upper()if L==o then return true,"\075\101\121 \118\195\161\108\105\100\097\033"else return false,"\075\101\121 \105\110\099\111\114\114\101\116\097\046"end end local function O()local Z,L=pcall(function()setclipboard(o)end)if not Z then return false,tostring(L)end return true,"\076\105\110\107 \099\111\112\105\097\100\111\033"end return{Verify=L,Copy=O}end}local F=a:CreateWindow({Title="\075\108\121\114\111\088 \082\067 \124 \075\101\121 \083\121\115\116\101\109",Icon="\115\113\117\097\114\101-\102\117\110\099\116\105\111\110",Author="\098\121 \078\097\111\115\101\105";Folder="\077\086\083\068\095\075\101\121\115\121\115\116\101\109",Theme="\068\097\114\107";Size=UDim2.fromOffset(620,260);Resizable=false,Transparent=true})local I=F:Tab({Title="\075\101\121",Icon="\107\101\121";Locked=false})I:Section({Title="\073\110\115\105\114\097 \115\117\097 \075\101\121 \112\097\114\097 \097\099\101\115\115\097\114 \111 \115\099\114\105\112\116"})local H=I:Input({Title="\083\117\097 \075\101\121",Desc="\075\101\121 \083\121\115\116\101\109";Type="\073\110\112\117\116";Placeholder="\068\105\103\105\116\101 \115\117\097 \075\101\121 \097\113\117\105"})local B I:Paragraph({Title="\083\116\097\116\117\115";Desc="\065\103\117\097\114\100\097\110\100\111 \118\097\108\105\100\097\195\167\195\163\111\046\046\046",Callback=function(Z)B=Z end})local function x(Z)if not Z then return""end if type(Z.GetValue)=="\102\117\110\099\116\105\111\110"then local L,j=pcall(function()return Z:GetValue()end)if L and(j and tostring(j)~="")then return tostring(j)end end if Z.__value and tostring(Z.__value)~=""then return tostring(Z.__value)end if Z.Value and tostring(Z.Value)~=""then return tostring(Z.Value)end local L,j=pcall(function()return Z:GetDescendants()end)if L and j then for Z,L in ipairs(j)do if L:IsA("\084\101\120\116\066\111\120")then return tostring(L.Text or"")end end end return""end local function C()local Z,L=pcall(function()local Z=game:HttpGet(O,true)local L=loadstring and loadstring(Z)or load(Z)if type(L)=="\102\117\110\099\116\105\111\110"then L()else error("\076\111\097\100\115\116\114\105\110\103 \110\195\163\111 \114\101\116\111\114\110\111\117 \102\117\110\195\167\195\163\111")end end)return Z,L end I:Button({Title="\073\110\112\117\116 \075\101\121";Desc="\086\097\108\105\100\097 \097 \107\101\121 \101 \099\097\114\114\101\103\097 \111 \115\099\114\105\112\116",Callback=function()local Z=a.Services and a.Services.klyro_service if not Z or type(Z.New)~="\102\117\110\099\116\105\111\110"then if B then B:SetDesc("\083\101\114\118\105\195\167\111 \100\101 \075\101\121 \105\110\100\105\115\112\111\110\195\173\118\101\108\046")end return end local L,j=pcall(function()return Z.New("\107\108\121\114\111\083\101\114\118\105\099\101\073\100")end)if not L or not j then if B then B:SetDesc("\070\097\108\104\097 \097\111 \105\110\105\099\105\097\108\105\122\097\114 \115\101\114\118\105\195\167\111 \100\101 \075\101\121\046")end return end local o=x(H)or""o=(tostring(o)):gsub("\037\115\043","")local O,P,F=pcall(function()return j.Verify(o)end)local d,i if O then if type(P)=="\098\111\111\108\101\097\110"then d=P i=tostring(F or P and"\086\195\161\108\105\100\097"or"\073\110\118\195\161\108\105\100\097")else if type(P)=="\115\116\114\105\110\103"then d=true i=P else d=false i="\082\101\115\112\111\115\116\097 \105\110\101\115\112\101\114\097\100\097 \100\097 \118\101\114\105\102\105\099\097\195\167\195\163\111\046"end end else d=false i="\069\114\114\111 \110\097 \118\101\114\105\102\105\099\097\195\167\195\163\111\058 "..tostring(P)end if B then B:SetDesc(i or"")end if d then if B then B:SetDesc("\075\101\121 \097\099\101\105\116\097\033 \067\097\114\114\101\103\097\110\100\111 \115\099\114\105\112\116\046\046\046")end local Z,L=C()if Z then if B then B:SetDesc("\083\099\114\105\112\116 \099\097\114\114\101\103\097\100\111 \099\111\109 \115\117\099\101\115\115\111\033")end pcall(function()I:Destroy()end)else if B then B:SetDesc("\069\114\114\111 \097\111 \099\097\114\114\101\103\097\114 \115\099\114\105\112\116\058 "..tostring(L))end warn("\069\114\114\111 \101\120\101\099\117\116\105\110\103 \108\111\097\100\115\116\114\105\110\103\058",L)end else if B then B:SetDesc(i or"\075\101\121 \105\110\118\195\161\108\105\100\097\046")end end end})I:Button({Title="\071\101\116 \075\101\121";Desc="\067\111\112\105\097 \108\105\110\107 \100\111 \068\105\115\099\111\114\100 \112\097\114\097 \111\098\116\101\114 \097 \075\101\121";Callback=function()local Z=a.Services and a.Services.klyro_service if not Z or type(Z.New)~="\102\117\110\099\116\105\111\110"then if B then B:SetDesc("\083\101\114\118\105\195\167\111 \100\101 \075\101\121 \105\110\100\105\115\112\111\110\195\173\118\101\108\046")end return end local L,j=pcall(function()return Z.New("\107\108\121\114\111\083\101\114\118\105\099\101\073\100")end)if not L or not j or type(j.Copy)~="\102\117\110\099\116\105\111\110"then if B then B:SetDesc("\078\195\163\111 \102\111\105 \112\111\115\115\195\173\118\101\108 \105\110\105\099\105\097\108\105\122\097\114 \102\117\110\195\167\195\163\111 \067\111\112\121\046")end return end local o,O=pcall(function()return j.Copy()end)if o then if B then B:SetDesc(tostring(O)~=""and tostring(O)or"\076\105\110\107 \099\111\112\105\097\100\111\033")end else if B then B:SetDesc("\070\097\108\104\097 \097\111 \099\111\112\105\097\114 \108\105\110\107\058 "..tostring(O))end end end})end local function BI()if false then local Z=FI.IsKeylessMode({Service="\068\101\102\097\117\108\116"})if Z and Z.keyless_mode then pcall(HI)else if _G.SCRIPT_KEY and FI.ValidateKey({Key=_G.SCRIPT_KEY})=="\118\097\108\105\100"then pcall(HI)else FI.QuickStartUI({provider="\077\105\120\101\100";title="\083\099\114\105\112\116 \065\099\099\101\115\115";subtitle="\075\101\121 \086\101\114\105\102\105\099\097\116\105\111\110 \082\101\113\117\105\114\101\100",service="\068\101\102\097\117\108\116",description="\080\108\101\097\115\101 \118\101\114\105\102\121 \121\111\117\114 \107\101\121 \116\111 \099\111\110\116\105\110\117\101";onSuccess=function(Z)pcall(HI)end;onError=function(Z) end})end end else pcall(HI)end end BI()